{
    "openapi": "3.0.0",
    "info": {
        "title": "Your super  ApplicationAPI",
        "version": "1.0.0"
    },
    "paths": {
        "/api/admins/register": {
            "post": {
                "tags": [
                    "Admin_Auth"
                ],
                "summary": "Register a new admin",
                "description": "Create a new admin account with the provided details.",
                "operationId": "adminAuthRegister",
                "requestBody": {
                    "description": "Provide the admin details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "johndoe@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "SecretPassword"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "SecretPassword"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Admin account created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "admin": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "xxxxxxxxxxxxxxx"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin registered successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation errors",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The email field is required."
                                                    }
                                                },
                                                "password": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password field is required."
                                                    }
                                                },
                                                "password_confirmation": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The password confirmation field is required."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admins/login": {
            "post": {
                "tags": [
                    "Admin_Auth"
                ],
                "summary": "Admin Login",
                "description": "Authenticate an admin user by email and password.",
                "operationId": "adminAuthLogin",
                "requestBody": {
                    "description": "Credentials for authentication",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "admin@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success response with admin and token information.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "admin": {},
                                        "token": {
                                            "type": "string",
                                            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized response with error message.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "response": {
                                            "type": "string",
                                            "example": "Please enter the right email or password!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/admins/logout": {
            "post": {
                "tags": [
                    "Admin_Auth"
                ],
                "summary": "Logout a user",
                "description": "Logout a user by revoking their token",
                "operationId": "adminAuthLogout",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "response": {
                                            "type": "string",
                                            "example": "Logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barbers": {
            "post": {
                "tags": [
                    "Barber"
                ],
                "summary": "Store a new barber.",
                "description": "Store a new barber with name, barbershop id, and image.",
                "operationId": "0d0e917b6d219bc19243f624f4b96c18",
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "barbershop_id",
                                    "image"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the barber.",
                                        "type": "string"
                                    },
                                    "barbershop_id": {
                                        "description": "The ID of the barbershop that the barber belongs to.",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "The image of the barber.",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Barber created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Barber created successfully"
                                        },
                                        "barber": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barbers/{barber_id}": {
            "put": {
                "tags": [
                    "Barber"
                ],
                "summary": "Update an existing barber.",
                "description": "Update an existing barber with name, barbershop id, and image.",
                "operationId": "8910504062b68f135cc5403051901510",
                "parameters": [
                    {
                        "name": "barber_id",
                        "in": "path",
                        "description": "The ID of the barber to update.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "barbershop_id"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "The name of the barber.",
                                        "type": "string"
                                    },
                                    "barbershop_id": {
                                        "description": "The ID of the barbershop that the barber belongs to.",
                                        "type": "integer"
                                    },
                                    "image": {
                                        "description": "The image of the barber.",
                                        "type": "file"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Barber updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Barber updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Barber not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Barber not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Barber"
                ],
                "summary": "Delete a barber.",
                "description": "Delete a barber by ID.",
                "operationId": "bd2de630acf1401abbc16cada5fcfc74",
                "parameters": [
                    {
                        "name": "barber_id",
                        "in": "path",
                        "description": "ID of the barber to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Barber deleted successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The barber has been deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Barber not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No barber found to be deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barber/ratings": {
            "post": {
                "tags": [
                    "Barber_Ratings"
                ],
                "summary": "Store a new rating for a barber.",
                "description": "Store a new rating for a barber with barber ID, client ID, rating value, and review.",
                "operationId": "e5f5b1265a952a1f45867a187057c689",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "barber_id",
                                    "client_id",
                                    "rating"
                                ],
                                "properties": {
                                    "barber_id": {
                                        "description": "The ID of the barber being rated.",
                                        "type": "integer"
                                    },
                                    "client_id": {
                                        "description": "The ID of the client submitting the rating.",
                                        "type": "integer"
                                    },
                                    "rating": {
                                        "description": "The rating value (1-5).",
                                        "type": "integer"
                                    },
                                    "review": {
                                        "description": "The review text (optional).",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Rating created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "barber_rating": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barber/ratings/{id}": {
            "get": {
                "tags": [
                    "Barber_Ratings"
                ],
                "summary": "Get all ratings for a specific barber.",
                "description": "Get all ratings for a specific barber using the barber's ID.",
                "operationId": "f034b9154c295fe1eabb5086ce7268b6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the barber.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ratings retrieved successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {}
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Barber not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Barber not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Barber_Ratings"
                ],
                "summary": "Update an existing barber rating.",
                "description": "Update an existing barber rating with rating ID, rating value, and review.",
                "operationId": "7e76eb18788b3107489e0081f5128325",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the rating to update.",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating"
                                ],
                                "properties": {
                                    "rating": {
                                        "description": "The rating value (1-5).",
                                        "type": "integer"
                                    },
                                    "review": {
                                        "description": "The review text (optional).",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Rating updated successfully.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "barber_rating": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Rating not found.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Rating not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Barber_Ratings"
                ],
                "summary": "Delete a rating for a barber.",
                "description": "Delete a rating for a barber with the given ID.",
                "operationId": "84461d51ebc199fba141ba59bb036590",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "The ID of the rating to delete.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Rating deleted successfully"
                    },
                    "404": {
                        "description": "Rating not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Rating not found."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barbershops": {
            "get": {
                "tags": [
                    "Barbershop"
                ],
                "summary": "Get all barbershops",
                "description": "Returns a list of all barbershops",
                "operationId": "54b3052236bad78175a814d0d0b56698",
                "responses": {
                    "200": {
                        "description": "List of barbershops",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "Barbershop name"
                                            },
                                            "image": {
                                                "type": "string",
                                                "example": "barbershop.jpg"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Barbershop description"
                                            },
                                            "address": {
                                                "type": "string",
                                                "example": "123 Main St"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Anytown"
                                            },
                                            "longitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": -73.12345
                                            },
                                            "latitude": {
                                                "type": "number",
                                                "format": "float",
                                                "example": 40.12345
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Barbershop"
                ],
                "summary": "Add a new barbershop",
                "description": "Creates a new barbershop based on the provided parameters",
                "operationId": "60c28f628eae17a6c982074be5d12808",
                "requestBody": {
                    "description": "Barbershop details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Barbershop name"
                                    },
                                    "image": {
                                        "description": "Image file of the barbershop",
                                        "type": "string",
                                        "format": "binary"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Barbershop description"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "Anytown"
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": -73.12345
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 42.12345
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Barbershop added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Barbershop has been added successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 422
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "name": [
                                                    "The name field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barbershops/{barbershop_id}": {
            "get": {
                "tags": [
                    "Barbershop"
                ],
                "summary": "Show a barbershop by ID",
                "description": "Returns a specific barbershop by ID",
                "operationId": "02f915e2711d6940f977f914e216956f",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the barbershop to show",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The requested barbershop",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Barbershop name"
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "barbershop.jpg"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Barbershop description"
                                        },
                                        "address": {
                                            "type": "string",
                                            "example": "123 Main St"
                                        },
                                        "city": {
                                            "type": "string",
                                            "example": "Anytown"
                                        },
                                        "longitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": -73.12345
                                        },
                                        "latitude": {
                                            "type": "number",
                                            "format": "float",
                                            "example": 40.12345
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2021-01-01 00:00:00"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2021-01-01 00:00:00"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Barbershop not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No barbershop found to be shown!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Barbershop"
                ],
                "summary": "Update a barbershop",
                "description": "Updates an existing barbershop",
                "operationId": "46d058496e6b80fbad7c91e1cf0b818b",
                "parameters": [
                    {
                        "name": "barbershop_id",
                        "in": "path",
                        "description": "ID of the barbershop to be updated",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Fields to be updated",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "image",
                                    "description",
                                    "address",
                                    "city",
                                    "longitude",
                                    "latitude"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John's Barbershop"
                                    },
                                    "image": {
                                        "type": "file"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "The best barbershop in town"
                                    },
                                    "address": {
                                        "type": "string",
                                        "example": "123 Main St"
                                    },
                                    "city": {
                                        "type": "string",
                                        "example": "New York"
                                    },
                                    "longitude": {
                                        "type": "number",
                                        "example": "-73.935242"
                                    },
                                    "latitude": {
                                        "type": "number",
                                        "example": "40.730610"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Barbershop updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Barbershop updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No barbershop found to be updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No barbershop found to be updated!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Barbershop"
                ],
                "summary": "Delete a barbershop",
                "description": "Deletes a barbershop from the database",
                "operationId": "2f049fc520bf70472aaa134138321f8f",
                "parameters": [
                    {
                        "name": "barbershop_id",
                        "in": "path",
                        "description": "ID of the barbershop to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success message",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The barbershop has been deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Barbershop not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No barbershop found to be deleted!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barbershops/{barbershop_id}/services": {
            "get": {
                "tags": [
                    "Barbershop"
                ],
                "summary": "Get barbershop services with price and slots",
                "description": "Retrieves the services of the specified barbershop along with their prices and available slots",
                "operationId": "9e3094404b66a51f915240875f7c26dd",
                "parameters": [
                    {
                        "name": "barbershop_id",
                        "in": "path",
                        "description": "ID of the barbershop",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the services of the barbershop along with their prices and available slots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "services": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Haircut"
                                                    },
                                                    "price": {
                                                        "type": "integer",
                                                        "example": 20
                                                    },
                                                    "slots": {
                                                        "type": "integer",
                                                        "example": 5
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No barbershop found to get its services!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No barbershop found to get its services!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Barbershop"
                ],
                "summary": "Add services to a barbershop",
                "description": "Adds services to the specified barbershop",
                "operationId": "6a3a81d1ab1a542a689e7952431e4d95",
                "parameters": [
                    {
                        "name": "barbershop_id",
                        "in": "path",
                        "description": "ID of the barbershop",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Services to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "services": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int64"
                                        },
                                        "example": "[1, 2, 3]"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Services added successfully to the barbershop",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Services added successfully to the barbershop"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No barbershop found to add services to it!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No barbershop found to add services to it!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barbershops/{barbershop_id}/services/{service_id}": {
            "put": {
                "tags": [
                    "Barbershop"
                ],
                "summary": "Edit the price and slots of a service in a barbershop",
                "description": "Updates the price and slots of the specified service in the specified barbershop",
                "operationId": "6c3acc0444ea8643916fc78a60c2a5e9",
                "parameters": [
                    {
                        "name": "barbershop_id",
                        "in": "path",
                        "description": "ID of the barbershop",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "ID of the service",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "description": "New price and slots of the service",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "price": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 19.99
                                    },
                                    "slots": {
                                        "type": "integer",
                                        "example": 5
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Service price and slots updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service price and slots updated successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No barbershop found to edit its services!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No barbershop found to edit its services!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Barbershop"
                ],
                "summary": "Remove a service from a barbershop",
                "description": "Removes a service from the specified barbershop",
                "operationId": "0be246ca197a82cf25393144b4388371",
                "parameters": [
                    {
                        "name": "barbershop_id",
                        "in": "path",
                        "description": "ID of the barbershop",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "service_id",
                        "in": "path",
                        "description": "ID of the service to be removed",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service removed successfully from the barbershop",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Service removed successfully from the barbershop"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No barbershop found to remove service from it!",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No barbershop found to remove service from it!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barbershops/{barbershop_id}/reviews": {
            "get": {
                "tags": [
                    "Barbershop"
                ],
                "summary": "Get reviews for a barbershop",
                "description": "Returns a list of reviews for the specified barbershop",
                "operationId": "1080f74cdeb6d5b25771cfca2e0c3a9e",
                "parameters": [
                    {
                        "name": "barbershop_id",
                        "in": "path",
                        "description": "ID of the barbershop to get reviews for",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reviews",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "barber_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "client_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "rating": {
                                                "type": "integer",
                                                "example": 4
                                            },
                                            "review": {
                                                "type": "string",
                                                "example": "Great haircut!"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Barbershop not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No barbershop found to get its reviews!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/barbershops/{barbershop_id}/barbers": {
            "get": {
                "tags": [
                    "Barbershop"
                ],
                "summary": "Get barbers of a specific barbershop",
                "description": "Retrieves the list of barbers who work at a specific barbershop",
                "operationId": "getBarbersOfBarbershop",
                "parameters": [
                    {
                        "name": "barbershop_id",
                        "in": "path",
                        "description": "ID of the barbershop to get the barbers from",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of barbers",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 200
                                        },
                                        "barbers": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "image": {
                                                        "type": "string",
                                                        "example": "https://example.com/avatar.png"
                                                    },
                                                    "rating": {
                                                        "type": "integer",
                                                        "example": 4
                                                    },
                                                    "rating_count": {
                                                        "type": "integer",
                                                        "example": 10
                                                    },
                                                    "barbershop_id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No barbershop found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "integer",
                                            "example": 404
                                        },
                                        "errors": {
                                            "type": "string",
                                            "example": "No barbershop found to get its barbers!"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    }
}